THIS FILE STATES BUGS TO FIX AND FEATURES TO IMPLEMENT

TODO:
- End turn as normal button, because that huge hourglass looks silly and can be clicked by mistake.
- Rename `before` into `onShot` and `after` into `onHit`
- Better UI, maybe new-age/astrology themed, scrolls are not magical enough.
- Player should be only able to research the creatures it has captured the essence of. To do that player must defeat that unit and investigate its corpse.
- Each spell should have tier, associated with difficulty level at which enemy wizard would be allowed to use it.
- consider moving spells into spell book and usual abilities to the left of the menu buttons.
- Implement spell countering, using usual dispel spell, where player choices the unit that is being targeted by harmful spell and pays the mana amount required to dispel it. Dispeling a global enchantment should be a separate action, that would present player with menu of all enchantments and their owners
- Unit's facing affecting damage received: hitting unit from side would inflict 1 additional damage, while hitting it from back would also decrease its defense by 1. Allow changing facing by spending 1 step.
- Move unit stat icons into info line, so player won't have to select the creature to see its stats.
- all units with hands should have act_throw_rock ability, which will help fighting ranged units when nothing else is available.
- int.block should be renamed to unit
- blowaway should use `world.units_in_range` to determine targets, so obstacles would block the windflow
- griffin's unlimited counter attack (watch out for endless cycle, when griffin attacks other griffin)
- Non-blessed AI units shouldn't attack undead enemies, but attack non-undead or run away.
- Sound on failed attack on undead.
- Change all control to left mouse button. Right would be used for cancelation. Swapping could be done be holding shift-key. Unit deselecting would be done with selecting that unit again.
  That should help porting to touch devices.
- Proper teleporation spell, requires introducing two point actions, probably can be implement using paired actions.
- Proper firewall implementation, placing flame between two points.
- begin implementing campaign
- Include recall to pentagram into AI's pathfinding.
- height advantage gives +1 to attack to melee units, and +2 to ranged units
- Casting time for some spells, including casting status icon and action animation for casting units. Caster could be interrupted, if attacked while casting.
- refactor some uses of add_effect into add_param
  should not use Params for effect's script
- rename moves to on_move, etc..
- `act` to `action` is like `class` to `unit`; Refactor it: rename `act` to tact, action to `act`, class to tunit
- Think about refactoring genes to use ECS system, where each unit has a list of systems acting on him. Like i.e. poison system and regen systems.
- AI should change vampire into bat form, before attack, and then back to vampire, when he is sees enemy and can attack
- store map events in a separate file
- 1-way portals, leading to situations where enemy can quickly attack player, while player has to find other way.
- traps
- Some way to protect area guardians from undead units. Consider some bless fountains/pedestala, giving nearby units ability to fight undeads. Maybe blessed tiles, which cursed units cannot enter. Or just allow all neutral units to harm cursed units.
- unit width and height, limiting preventing it to move tiny paths.
- optimize resoure engine, so graphics and sounds would be loaded only when they are needed and deallocated when they are not required.
- At the end of AI turn, viewport focus should change to the place before AI turn.
- Move sound center to the middle of the screen (currently it is at the top).
- Proper player order logging for each turn, so game could be played online and player can review AI turn. Some uses would likely require copying world state.
- high enough initial map level, so we have place for deepth tree water and caves.
- flying mode for flyers, where only other flyers and ranged units can harm them. Such units fly two cells above ground, only where it is possible to do. That would also allow differentiating units into floaters, like ghost, and flyers, like dragon. Same way, climbers, like spider, should stick to the walls.
- tiling: incomplete tile column should take into account nearby tiles of the same type, instead of starting from zero.

Bugs:
- vampire on low health turning into bat results in bat being invincible with 0 health (enemies cant attack it)
- when new map gets saved, folder browser should update content
- when height>>80, column tiles and units are not drawn
- hydra damages and poisons allied units++
- invisibility doesnt hide poison, bood and regen effects
- flying units can possibly crash pathfinder, when they are at very high tiles, being able to cross border. Insert a check against mad dimensions.
- blizzard projectiles have no gravity
- player can research enemy units
- adding and removing table from corner crashes the game, due to attempt to place outside of the map
- multicell units, like table, react badly when drawing tiles under them. disallow drawing at all
- `update_picked` and unit.picked should use different picking strucutre. current is error prone and had led to bugs previously
- projectiles hung up, when their sender dies

Sound:
- fix sound issues, where sounds are affected by height
- monster sound acks


UI:
- targeted units shouldn't blink
- add some description to tabs and menu tabs buttons
- unit profile and main menu options could be a tabs like all others
- a line from the portrait of current unit to its location on minimap
- better health indicators for selected units (use green dots - one per hit-point)
- in editor, placing unit on top of object should not be possible.
- simple way to temporarily transfer control to the AI, for map and AI testing.


Graphics:
- New player colors: player{blue},king{purple},warlock{black},witch{red},
                     katzard{green},mime{orange},neutral{white}
- icon for regen stat effect
- icon for dwarf's defend action
- icon for ghost's phase
- icon for devil's teleport
- goblin should be throwing bomb or molotov cocktrail instead of spear, as throwing spear looks too silly for such a weak creature, while bomb would contribute to that anarchist mischevous style. It would also differentiate goblin from elf by allowing his attack to have splash damage and setting ground on fire.
- dragon animation jumps horizontally during attack
- eye movement animation.
- finish house tileset, including floor and roof; dirt/plain should not align to house wall
- better flight animation (idle-anim for floating effect and cloud under unit); use wesnoth halo/saurian-magic-halo-*; monster-elemental_air could be useful too
- better detonate effect, neighboring units sent flying into the air, knocked back in all directions.
- better hasted unit animation (trail after hasted creature)
- power node should have round bottom, so it would look more natural on rough terrain or in flight.
- Better stones tileset. Current one don't really fit in.
- Automate shadow placement
- road object, which would block grass
- grass corner sprites, which would be auto placed onto dirt in corners between two grass tiles.
- design fullscreen graphics effects, like armageddon, snowstorm, fog and nighttime.
- dummy units, that would be left instead of real one, when fog of war takes place
- fog of war reveal animation
- particle system
- New tilesets: Snow, Lava, Swamp
- beetle movement frame gets cropped;
- beetle needs attack animation;

Optimization Possibilities:
- Optimize unit and action structure to take less space.
- use cell index directly instead of unit_goal wrapper
- when all four corners of object sprite are hidden, don't allow selecting it, also, dont draw it. requires probing pixels inside framebuffer
- fast way to determine height to the ceiling - that way we can have large creature wont be able to move into tiny hole. One way to do it is by using special tiles in place of empty or void tiles
- obstacles blocking sight, would require precomputed sight tree, where one blocked node would block sight to all children.
- when updating tiles, we can also mark doorways, so that flyers and jumpers could pick between multiple Z-levels
- mouse picking can be done in reverse on draw list

Symta Language Handicaps:
- Allow to specify name of the output executable file and entry point file, other than main. That way we can produce several executable files in the same dir from the same source code base. I.e. we could have sprite sheet dumper utility without touching the main game exe.
- Don't use abort, because it involves windows debugger, that is pretty annoying.
- No way to quickly introduce an efficient inplace field on a struct, like unit, propagating it to save-file.
- No proper API for manually allocating types in shared memory.
